<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jinyuanjava.litemall.db.dao.LitemallGoodsProductMapper">
  <resultMap id="BaseResultMap" type="org.jinyuanjava.litemall.db.domain.LitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" typeHandler="org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler" />
    <result column="specification_ids" jdbcType="VARCHAR" property="specificationIds" typeHandler="org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="goods_pos_key" jdbcType="VARCHAR" property="goodsPosKey" />
    <result column="min_storenum" jdbcType="INTEGER" property="minStorenum" />
    <result column="yuyue_number" jdbcType="INTEGER" property="yuyueNumber" />
    <result column="remain_number" jdbcType="INTEGER" property="remainNumber" />
    <result column="store_ids" jdbcType="VARCHAR" property="storeIds" typeHandler="org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler" />
    <result column="store_names" jdbcType="VARCHAR" property="storeNames" typeHandler="org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler" />
    <result column="return_type" jdbcType="VARCHAR" property="returnType" />
    <result column="return_rule_id" jdbcType="INTEGER" property="returnRuleId" />
    <result column="return_rule_number" jdbcType="INTEGER" property="returnRuleNumber" />
    <result column="return_rule_price" jdbcType="DECIMAL" property="returnRulePrice" />
    <result column="return_rule_source_price" jdbcType="DECIMAL" property="returnRuleSourcePrice" />
    <result column="return_allow_buy_goods" jdbcType="BIT" property="returnAllowBuyGoods" />
    <result column="return_allow_order" jdbcType="BIT" property="returnAllowOrder" />
    <result column="return_groupon_info" jdbcType="VARCHAR" property="returnGrouponInfo" />
    <result column="return_if_only_user_bonus" jdbcType="BIT" property="returnIfOnlyUserBonus" />
    <result column="return_if_use_coupon" jdbcType="BIT" property="returnIfUseCoupon" />
    <result column="return_if_use_bonus" jdbcType="BIT" property="returnIfUseBonus" />
    <result column="seckill_end_date" jdbcType="TIMESTAMP" property="seckillEndDate" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="return_if_free_post" jdbcType="BIT" property="returnIfFreePost" />
    <result column="price_method" jdbcType="VARCHAR" property="priceMethod" />
    <result column="price_desc" jdbcType="VARCHAR" property="priceDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.specificationsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.specificationIdsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.storeIdsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.storeNamesCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.specificationsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.specificationIdsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.storeIdsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.storeNamesCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, goods_id, specifications, specification_ids, price, `number`, url, goods_pos_key, 
    min_storenum, yuyue_number, remain_number, store_ids, store_names, return_type, return_rule_id, 
    return_rule_number, return_rule_price, return_rule_source_price, return_allow_buy_goods, 
    return_allow_order, return_groupon_info, return_if_only_user_bonus, return_if_use_coupon, 
    return_if_use_bonus, seckill_end_date, add_time, update_time, deleted, return_if_free_post, 
    price_method, price_desc
  </sql>
  <select id="selectByExample" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, goods_id, specifications, specification_ids, price, `number`, url, goods_pos_key, 
          min_storenum, yuyue_number, remain_number, store_ids, store_names, return_type, 
          return_rule_id, return_rule_number, return_rule_price, return_rule_source_price, 
          return_allow_buy_goods, return_allow_order, return_groupon_info, return_if_only_user_bonus, 
          return_if_use_coupon, return_if_use_bonus, seckill_end_date, add_time, update_time, 
          deleted, return_if_free_post, price_method, price_desc
      </otherwise>
    </choose>
    from litemall_goods_product
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from litemall_goods_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from litemall_goods_product
    where id = #{id,jdbcType=INTEGER}
      and deleted = 
    <choose>
      <when test="andLogicalDeleted">
        1
      </when>
      <otherwise>
        0
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, goods_id, specifications, specification_ids, price, `number`, url, goods_pos_key, 
          min_storenum, yuyue_number, remain_number, store_ids, store_names, return_type, 
          return_rule_id, return_rule_number, return_rule_price, return_rule_source_price, 
          return_allow_buy_goods, return_allow_order, return_groupon_info, return_if_only_user_bonus, 
          return_if_use_coupon, return_if_use_bonus, seckill_end_date, add_time, update_time, 
          deleted, return_if_free_post, price_method, price_desc
      </otherwise>
    </choose>
    from litemall_goods_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from litemall_goods_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProductExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into litemall_goods_product (goods_id, specifications, 
      specification_ids, 
      price, `number`, url, 
      goods_pos_key, min_storenum, yuyue_number, 
      remain_number, store_ids, 
      store_names, 
      return_type, return_rule_id, return_rule_number, 
      return_rule_price, return_rule_source_price, 
      return_allow_buy_goods, return_allow_order, return_groupon_info, 
      return_if_only_user_bonus, return_if_use_coupon, return_if_use_bonus, 
      seckill_end_date, add_time, update_time, 
      deleted, return_if_free_post, price_method, 
      price_desc)
    values (#{goodsId,jdbcType=INTEGER}, #{specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}, 
      #{specificationIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}, 
      #{price,jdbcType=DECIMAL}, #{number,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{goodsPosKey,jdbcType=VARCHAR}, #{minStorenum,jdbcType=INTEGER}, #{yuyueNumber,jdbcType=INTEGER}, 
      #{remainNumber,jdbcType=INTEGER}, #{storeIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler}, 
      #{storeNames,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}, 
      #{returnType,jdbcType=VARCHAR}, #{returnRuleId,jdbcType=INTEGER}, #{returnRuleNumber,jdbcType=INTEGER}, 
      #{returnRulePrice,jdbcType=DECIMAL}, #{returnRuleSourcePrice,jdbcType=DECIMAL}, 
      #{returnAllowBuyGoods,jdbcType=BIT}, #{returnAllowOrder,jdbcType=BIT}, #{returnGrouponInfo,jdbcType=VARCHAR}, 
      #{returnIfOnlyUserBonus,jdbcType=BIT}, #{returnIfUseCoupon,jdbcType=BIT}, #{returnIfUseBonus,jdbcType=BIT}, 
      #{seckillEndDate,jdbcType=TIMESTAMP}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BIT}, #{returnIfFreePost,jdbcType=BIT}, #{priceMethod,jdbcType=VARCHAR}, 
      #{priceDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into litemall_goods_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="specificationIds != null">
        specification_ids,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="goodsPosKey != null">
        goods_pos_key,
      </if>
      <if test="minStorenum != null">
        min_storenum,
      </if>
      <if test="yuyueNumber != null">
        yuyue_number,
      </if>
      <if test="remainNumber != null">
        remain_number,
      </if>
      <if test="storeIds != null">
        store_ids,
      </if>
      <if test="storeNames != null">
        store_names,
      </if>
      <if test="returnType != null">
        return_type,
      </if>
      <if test="returnRuleId != null">
        return_rule_id,
      </if>
      <if test="returnRuleNumber != null">
        return_rule_number,
      </if>
      <if test="returnRulePrice != null">
        return_rule_price,
      </if>
      <if test="returnRuleSourcePrice != null">
        return_rule_source_price,
      </if>
      <if test="returnAllowBuyGoods != null">
        return_allow_buy_goods,
      </if>
      <if test="returnAllowOrder != null">
        return_allow_order,
      </if>
      <if test="returnGrouponInfo != null">
        return_groupon_info,
      </if>
      <if test="returnIfOnlyUserBonus != null">
        return_if_only_user_bonus,
      </if>
      <if test="returnIfUseCoupon != null">
        return_if_use_coupon,
      </if>
      <if test="returnIfUseBonus != null">
        return_if_use_bonus,
      </if>
      <if test="seckillEndDate != null">
        seckill_end_date,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="returnIfFreePost != null">
        return_if_free_post,
      </if>
      <if test="priceMethod != null">
        price_method,
      </if>
      <if test="priceDesc != null">
        price_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="specificationIds != null">
        #{specificationIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="goodsPosKey != null">
        #{goodsPosKey,jdbcType=VARCHAR},
      </if>
      <if test="minStorenum != null">
        #{minStorenum,jdbcType=INTEGER},
      </if>
      <if test="yuyueNumber != null">
        #{yuyueNumber,jdbcType=INTEGER},
      </if>
      <if test="remainNumber != null">
        #{remainNumber,jdbcType=INTEGER},
      </if>
      <if test="storeIds != null">
        #{storeIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
      </if>
      <if test="storeNames != null">
        #{storeNames,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="returnType != null">
        #{returnType,jdbcType=VARCHAR},
      </if>
      <if test="returnRuleId != null">
        #{returnRuleId,jdbcType=INTEGER},
      </if>
      <if test="returnRuleNumber != null">
        #{returnRuleNumber,jdbcType=INTEGER},
      </if>
      <if test="returnRulePrice != null">
        #{returnRulePrice,jdbcType=DECIMAL},
      </if>
      <if test="returnRuleSourcePrice != null">
        #{returnRuleSourcePrice,jdbcType=DECIMAL},
      </if>
      <if test="returnAllowBuyGoods != null">
        #{returnAllowBuyGoods,jdbcType=BIT},
      </if>
      <if test="returnAllowOrder != null">
        #{returnAllowOrder,jdbcType=BIT},
      </if>
      <if test="returnGrouponInfo != null">
        #{returnGrouponInfo,jdbcType=VARCHAR},
      </if>
      <if test="returnIfOnlyUserBonus != null">
        #{returnIfOnlyUserBonus,jdbcType=BIT},
      </if>
      <if test="returnIfUseCoupon != null">
        #{returnIfUseCoupon,jdbcType=BIT},
      </if>
      <if test="returnIfUseBonus != null">
        #{returnIfUseBonus,jdbcType=BIT},
      </if>
      <if test="seckillEndDate != null">
        #{seckillEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="returnIfFreePost != null">
        #{returnIfFreePost,jdbcType=BIT},
      </if>
      <if test="priceMethod != null">
        #{priceMethod,jdbcType=VARCHAR},
      </if>
      <if test="priceDesc != null">
        #{priceDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProductExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_goods_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="record.specificationIds != null">
        specification_ids = #{record.specificationIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPosKey != null">
        goods_pos_key = #{record.goodsPosKey,jdbcType=VARCHAR},
      </if>
      <if test="record.minStorenum != null">
        min_storenum = #{record.minStorenum,jdbcType=INTEGER},
      </if>
      <if test="record.yuyueNumber != null">
        yuyue_number = #{record.yuyueNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remainNumber != null">
        remain_number = #{record.remainNumber,jdbcType=INTEGER},
      </if>
      <if test="record.storeIds != null">
        store_ids = #{record.storeIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
      </if>
      <if test="record.storeNames != null">
        store_names = #{record.storeNames,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="record.returnType != null">
        return_type = #{record.returnType,jdbcType=VARCHAR},
      </if>
      <if test="record.returnRuleId != null">
        return_rule_id = #{record.returnRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.returnRuleNumber != null">
        return_rule_number = #{record.returnRuleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.returnRulePrice != null">
        return_rule_price = #{record.returnRulePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.returnRuleSourcePrice != null">
        return_rule_source_price = #{record.returnRuleSourcePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.returnAllowBuyGoods != null">
        return_allow_buy_goods = #{record.returnAllowBuyGoods,jdbcType=BIT},
      </if>
      <if test="record.returnAllowOrder != null">
        return_allow_order = #{record.returnAllowOrder,jdbcType=BIT},
      </if>
      <if test="record.returnGrouponInfo != null">
        return_groupon_info = #{record.returnGrouponInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.returnIfOnlyUserBonus != null">
        return_if_only_user_bonus = #{record.returnIfOnlyUserBonus,jdbcType=BIT},
      </if>
      <if test="record.returnIfUseCoupon != null">
        return_if_use_coupon = #{record.returnIfUseCoupon,jdbcType=BIT},
      </if>
      <if test="record.returnIfUseBonus != null">
        return_if_use_bonus = #{record.returnIfUseBonus,jdbcType=BIT},
      </if>
      <if test="record.seckillEndDate != null">
        seckill_end_date = #{record.seckillEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.returnIfFreePost != null">
        return_if_free_post = #{record.returnIfFreePost,jdbcType=BIT},
      </if>
      <if test="record.priceMethod != null">
        price_method = #{record.priceMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.priceDesc != null">
        price_desc = #{record.priceDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_goods_product
    set id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      specifications = #{record.specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      specification_ids = #{record.specificationIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      price = #{record.price,jdbcType=DECIMAL},
      `number` = #{record.number,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      goods_pos_key = #{record.goodsPosKey,jdbcType=VARCHAR},
      min_storenum = #{record.minStorenum,jdbcType=INTEGER},
      yuyue_number = #{record.yuyueNumber,jdbcType=INTEGER},
      remain_number = #{record.remainNumber,jdbcType=INTEGER},
      store_ids = #{record.storeIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
      store_names = #{record.storeNames,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      return_type = #{record.returnType,jdbcType=VARCHAR},
      return_rule_id = #{record.returnRuleId,jdbcType=INTEGER},
      return_rule_number = #{record.returnRuleNumber,jdbcType=INTEGER},
      return_rule_price = #{record.returnRulePrice,jdbcType=DECIMAL},
      return_rule_source_price = #{record.returnRuleSourcePrice,jdbcType=DECIMAL},
      return_allow_buy_goods = #{record.returnAllowBuyGoods,jdbcType=BIT},
      return_allow_order = #{record.returnAllowOrder,jdbcType=BIT},
      return_groupon_info = #{record.returnGrouponInfo,jdbcType=VARCHAR},
      return_if_only_user_bonus = #{record.returnIfOnlyUserBonus,jdbcType=BIT},
      return_if_use_coupon = #{record.returnIfUseCoupon,jdbcType=BIT},
      return_if_use_bonus = #{record.returnIfUseBonus,jdbcType=BIT},
      seckill_end_date = #{record.seckillEndDate,jdbcType=TIMESTAMP},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      return_if_free_post = #{record.returnIfFreePost,jdbcType=BIT},
      price_method = #{record.priceMethod,jdbcType=VARCHAR},
      price_desc = #{record.priceDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_goods_product
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="specificationIds != null">
        specification_ids = #{specificationIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="goodsPosKey != null">
        goods_pos_key = #{goodsPosKey,jdbcType=VARCHAR},
      </if>
      <if test="minStorenum != null">
        min_storenum = #{minStorenum,jdbcType=INTEGER},
      </if>
      <if test="yuyueNumber != null">
        yuyue_number = #{yuyueNumber,jdbcType=INTEGER},
      </if>
      <if test="remainNumber != null">
        remain_number = #{remainNumber,jdbcType=INTEGER},
      </if>
      <if test="storeIds != null">
        store_ids = #{storeIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
      </if>
      <if test="storeNames != null">
        store_names = #{storeNames,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="returnType != null">
        return_type = #{returnType,jdbcType=VARCHAR},
      </if>
      <if test="returnRuleId != null">
        return_rule_id = #{returnRuleId,jdbcType=INTEGER},
      </if>
      <if test="returnRuleNumber != null">
        return_rule_number = #{returnRuleNumber,jdbcType=INTEGER},
      </if>
      <if test="returnRulePrice != null">
        return_rule_price = #{returnRulePrice,jdbcType=DECIMAL},
      </if>
      <if test="returnRuleSourcePrice != null">
        return_rule_source_price = #{returnRuleSourcePrice,jdbcType=DECIMAL},
      </if>
      <if test="returnAllowBuyGoods != null">
        return_allow_buy_goods = #{returnAllowBuyGoods,jdbcType=BIT},
      </if>
      <if test="returnAllowOrder != null">
        return_allow_order = #{returnAllowOrder,jdbcType=BIT},
      </if>
      <if test="returnGrouponInfo != null">
        return_groupon_info = #{returnGrouponInfo,jdbcType=VARCHAR},
      </if>
      <if test="returnIfOnlyUserBonus != null">
        return_if_only_user_bonus = #{returnIfOnlyUserBonus,jdbcType=BIT},
      </if>
      <if test="returnIfUseCoupon != null">
        return_if_use_coupon = #{returnIfUseCoupon,jdbcType=BIT},
      </if>
      <if test="returnIfUseBonus != null">
        return_if_use_bonus = #{returnIfUseBonus,jdbcType=BIT},
      </if>
      <if test="seckillEndDate != null">
        seckill_end_date = #{seckillEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="returnIfFreePost != null">
        return_if_free_post = #{returnIfFreePost,jdbcType=BIT},
      </if>
      <if test="priceMethod != null">
        price_method = #{priceMethod,jdbcType=VARCHAR},
      </if>
      <if test="priceDesc != null">
        price_desc = #{priceDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_goods_product
    set goods_id = #{goodsId,jdbcType=INTEGER},
      specifications = #{specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      specification_ids = #{specificationIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      price = #{price,jdbcType=DECIMAL},
      `number` = #{number,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      goods_pos_key = #{goodsPosKey,jdbcType=VARCHAR},
      min_storenum = #{minStorenum,jdbcType=INTEGER},
      yuyue_number = #{yuyueNumber,jdbcType=INTEGER},
      remain_number = #{remainNumber,jdbcType=INTEGER},
      store_ids = #{storeIds,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonIntegerArrayTypeHandler},
      store_names = #{storeNames,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      return_type = #{returnType,jdbcType=VARCHAR},
      return_rule_id = #{returnRuleId,jdbcType=INTEGER},
      return_rule_number = #{returnRuleNumber,jdbcType=INTEGER},
      return_rule_price = #{returnRulePrice,jdbcType=DECIMAL},
      return_rule_source_price = #{returnRuleSourcePrice,jdbcType=DECIMAL},
      return_allow_buy_goods = #{returnAllowBuyGoods,jdbcType=BIT},
      return_allow_order = #{returnAllowOrder,jdbcType=BIT},
      return_groupon_info = #{returnGrouponInfo,jdbcType=VARCHAR},
      return_if_only_user_bonus = #{returnIfOnlyUserBonus,jdbcType=BIT},
      return_if_use_coupon = #{returnIfUseCoupon,jdbcType=BIT},
      return_if_use_bonus = #{returnIfUseBonus,jdbcType=BIT},
      seckill_end_date = #{seckillEndDate,jdbcType=TIMESTAMP},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      return_if_free_post = #{returnIfFreePost,jdbcType=BIT},
      price_method = #{priceMethod,jdbcType=VARCHAR},
      price_desc = #{priceDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.jinyuanjava.litemall.db.domain.LitemallGoodsProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, goods_id, specifications, specification_ids, price, `number`, url, goods_pos_key, 
          min_storenum, yuyue_number, remain_number, store_ids, store_names, return_type, 
          return_rule_id, return_rule_number, return_rule_price, return_rule_source_price, 
          return_allow_buy_goods, return_allow_order, return_groupon_info, return_if_only_user_bonus, 
          return_if_use_coupon, return_if_use_bonus, seckill_end_date, add_time, update_time, 
          deleted, return_if_free_post, price_method, price_desc
      </otherwise>
    </choose>
    from litemall_goods_product
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update litemall_goods_product set deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update litemall_goods_product set deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>