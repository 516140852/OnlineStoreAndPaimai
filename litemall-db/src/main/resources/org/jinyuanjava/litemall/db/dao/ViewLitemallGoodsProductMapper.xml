<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jinyuanjava.litemall.db.dao.ViewLitemallGoodsProductMapper">
  <resultMap id="BaseResultMap" type="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" typeHandler="org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="goods_pos_key" jdbcType="VARCHAR" property="goodsPosKey" />
    <result column="min_storenum" jdbcType="INTEGER" property="minStorenum" />
    <result column="yuyue_number" jdbcType="INTEGER" property="yuyueNumber" />
    <result column="remain_number" jdbcType="INTEGER" property="remainNumber" />
    <result column="specification_ids" jdbcType="VARCHAR" property="specificationIds" />
    <result column="store_ids" jdbcType="VARCHAR" property="storeIds" />
    <result column="return_type" jdbcType="VARCHAR" property="returnType" />
    <result column="return_rule_id" jdbcType="INTEGER" property="returnRuleId" />
    <result column="return_rule_number" jdbcType="INTEGER" property="returnRuleNumber" />
    <result column="return_rule_price" jdbcType="DECIMAL" property="returnRulePrice" />
    <result column="return_allow_order" jdbcType="BIT" property="returnAllowOrder" />
    <result column="return_groupon_info" jdbcType="VARCHAR" property="returnGrouponInfo" />
    <result column="return_if_only_user_bonus" jdbcType="BIT" property="returnIfOnlyUserBonus" />
    <result column="return_allow_buy_goods" jdbcType="BIT" property="returnAllowBuyGoods" />
    <result column="return_rule_source_price" jdbcType="DECIMAL" property="returnRuleSourcePrice" />
    <result column="seckill_end_date" jdbcType="TIMESTAMP" property="seckillEndDate" />
    <result column="store_names" jdbcType="VARCHAR" property="storeNames" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_code" jdbcType="VARCHAR" property="categoryCode" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="gallery" jdbcType="VARCHAR" property="gallery" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="brief" jdbcType="VARCHAR" property="brief" />
    <result column="is_on_sale" jdbcType="BIT" property="isOnSale" />
    <result column="sort_order" jdbcType="SMALLINT" property="sortOrder" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="share_url" jdbcType="VARCHAR" property="shareUrl" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="is_hot" jdbcType="BIT" property="isHot" />
    <result column="if_xuni" jdbcType="BIT" property="ifXuni" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="counter_price" jdbcType="DECIMAL" property="counterPrice" />
    <result column="retail_price" jdbcType="DECIMAL" property="retailPrice" />
    <result column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="com_name" jdbcType="VARCHAR" property="comName" />
    <result column="if_store_bigger_zero" jdbcType="BIT" property="ifStoreBiggerZero" />
    <result column="used_range" jdbcType="VARCHAR" property="usedRange" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="gallery_big" jdbcType="VARCHAR" property="galleryBig" />
    <result column="if_ticket" jdbcType="BIT" property="ifTicket" />
    <result column="if_list_goods" jdbcType="BIT" property="ifListGoods" />
    <result column="dajiapai_category_id" jdbcType="INTEGER" property="dajiapaiCategoryId" />
    <result column="dajiapai_category_code" jdbcType="VARCHAR" property="dajiapaiCategoryCode" />
    <result column="dajiapai_category_name" jdbcType="VARCHAR" property="dajiapaiCategoryName" />
    <result column="private_category_id" jdbcType="INTEGER" property="privateCategoryId" />
    <result column="private_category_code" jdbcType="VARCHAR" property="privateCategoryCode" />
    <result column="private_category_name" jdbcType="VARCHAR" property="privateCategoryName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.specificationsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.specificationsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler} and #{criterion.secondValue,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, goods_id, specifications, price, `number`, url, add_time, update_time, deleted, 
    goods_pos_key, min_storenum, yuyue_number, remain_number, specification_ids, store_ids, 
    return_type, return_rule_id, return_rule_number, return_rule_price, return_allow_order, 
    return_groupon_info, return_if_only_user_bonus, return_allow_buy_goods, return_rule_source_price, 
    seckill_end_date, store_names, goods_sn, `name`, category_id, category_code, category_name, 
    brand_id, brand_name, gallery, keywords, brief, is_on_sale, sort_order, pic_url, 
    share_url, is_new, is_hot, if_xuni, unit, counter_price, retail_price, com_id, com_name, 
    if_store_bigger_zero, used_range, author_id, gallery_big, if_ticket, if_list_goods, 
    dajiapai_category_id, dajiapai_category_code, dajiapai_category_name, private_category_id, 
    private_category_code, private_category_name
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProductExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, goods_id, specifications, price, `number`, url, add_time, update_time, deleted, 
          goods_pos_key, min_storenum, yuyue_number, remain_number, specification_ids, store_ids, 
          return_type, return_rule_id, return_rule_number, return_rule_price, return_allow_order, 
          return_groupon_info, return_if_only_user_bonus, return_allow_buy_goods, return_rule_source_price, 
          seckill_end_date, store_names, goods_sn, `name`, category_id, category_code, category_name, 
          brand_id, brand_name, gallery, keywords, brief, is_on_sale, sort_order, pic_url, 
          share_url, is_new, is_hot, if_xuni, unit, counter_price, retail_price, com_id, 
          com_name, if_store_bigger_zero, used_range, author_id, gallery_big, if_ticket, 
          if_list_goods, dajiapai_category_id, dajiapai_category_code, dajiapai_category_name, 
          private_category_id, private_category_code, private_category_name, detail
      </otherwise>
    </choose>
    from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProductExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into view_litemall_goods_product (goods_id, specifications, 
      price, `number`, url, 
      add_time, update_time, deleted, 
      goods_pos_key, min_storenum, yuyue_number, 
      remain_number, specification_ids, store_ids, 
      return_type, return_rule_id, return_rule_number, 
      return_rule_price, return_allow_order, return_groupon_info, 
      return_if_only_user_bonus, return_allow_buy_goods, return_rule_source_price, 
      seckill_end_date, store_names, goods_sn, 
      `name`, category_id, category_code, 
      category_name, brand_id, brand_name, 
      gallery, keywords, brief, 
      is_on_sale, sort_order, pic_url, 
      share_url, is_new, is_hot, if_xuni, 
      unit, counter_price, retail_price, 
      com_id, com_name, if_store_bigger_zero, 
      used_range, author_id, gallery_big, 
      if_ticket, if_list_goods, dajiapai_category_id, 
      dajiapai_category_code, dajiapai_category_name, 
      private_category_id, private_category_code, 
      private_category_name, detail)
    values (#{goodsId,jdbcType=INTEGER}, #{specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler}, 
      #{price,jdbcType=DECIMAL}, #{number,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{goodsPosKey,jdbcType=VARCHAR}, #{minStorenum,jdbcType=INTEGER}, #{yuyueNumber,jdbcType=INTEGER}, 
      #{remainNumber,jdbcType=INTEGER}, #{specificationIds,jdbcType=VARCHAR}, #{storeIds,jdbcType=VARCHAR}, 
      #{returnType,jdbcType=VARCHAR}, #{returnRuleId,jdbcType=INTEGER}, #{returnRuleNumber,jdbcType=INTEGER}, 
      #{returnRulePrice,jdbcType=DECIMAL}, #{returnAllowOrder,jdbcType=BIT}, #{returnGrouponInfo,jdbcType=VARCHAR}, 
      #{returnIfOnlyUserBonus,jdbcType=BIT}, #{returnAllowBuyGoods,jdbcType=BIT}, #{returnRuleSourcePrice,jdbcType=DECIMAL}, 
      #{seckillEndDate,jdbcType=TIMESTAMP}, #{storeNames,jdbcType=VARCHAR}, #{goodsSn,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{categoryCode,jdbcType=VARCHAR}, 
      #{categoryName,jdbcType=VARCHAR}, #{brandId,jdbcType=INTEGER}, #{brandName,jdbcType=VARCHAR}, 
      #{gallery,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, 
      #{isOnSale,jdbcType=BIT}, #{sortOrder,jdbcType=SMALLINT}, #{picUrl,jdbcType=VARCHAR}, 
      #{shareUrl,jdbcType=VARCHAR}, #{isNew,jdbcType=BIT}, #{isHot,jdbcType=BIT}, #{ifXuni,jdbcType=BIT}, 
      #{unit,jdbcType=VARCHAR}, #{counterPrice,jdbcType=DECIMAL}, #{retailPrice,jdbcType=DECIMAL}, 
      #{comId,jdbcType=INTEGER}, #{comName,jdbcType=VARCHAR}, #{ifStoreBiggerZero,jdbcType=BIT}, 
      #{usedRange,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, #{galleryBig,jdbcType=VARCHAR}, 
      #{ifTicket,jdbcType=BIT}, #{ifListGoods,jdbcType=BIT}, #{dajiapaiCategoryId,jdbcType=INTEGER}, 
      #{dajiapaiCategoryCode,jdbcType=VARCHAR}, #{dajiapaiCategoryName,jdbcType=VARCHAR}, 
      #{privateCategoryId,jdbcType=INTEGER}, #{privateCategoryCode,jdbcType=VARCHAR}, 
      #{privateCategoryName,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into view_litemall_goods_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="goodsPosKey != null">
        goods_pos_key,
      </if>
      <if test="minStorenum != null">
        min_storenum,
      </if>
      <if test="yuyueNumber != null">
        yuyue_number,
      </if>
      <if test="remainNumber != null">
        remain_number,
      </if>
      <if test="specificationIds != null">
        specification_ids,
      </if>
      <if test="storeIds != null">
        store_ids,
      </if>
      <if test="returnType != null">
        return_type,
      </if>
      <if test="returnRuleId != null">
        return_rule_id,
      </if>
      <if test="returnRuleNumber != null">
        return_rule_number,
      </if>
      <if test="returnRulePrice != null">
        return_rule_price,
      </if>
      <if test="returnAllowOrder != null">
        return_allow_order,
      </if>
      <if test="returnGrouponInfo != null">
        return_groupon_info,
      </if>
      <if test="returnIfOnlyUserBonus != null">
        return_if_only_user_bonus,
      </if>
      <if test="returnAllowBuyGoods != null">
        return_allow_buy_goods,
      </if>
      <if test="returnRuleSourcePrice != null">
        return_rule_source_price,
      </if>
      <if test="seckillEndDate != null">
        seckill_end_date,
      </if>
      <if test="storeNames != null">
        store_names,
      </if>
      <if test="goodsSn != null">
        goods_sn,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="categoryCode != null">
        category_code,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="gallery != null">
        gallery,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="brief != null">
        brief,
      </if>
      <if test="isOnSale != null">
        is_on_sale,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="shareUrl != null">
        share_url,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="ifXuni != null">
        if_xuni,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="counterPrice != null">
        counter_price,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="comId != null">
        com_id,
      </if>
      <if test="comName != null">
        com_name,
      </if>
      <if test="ifStoreBiggerZero != null">
        if_store_bigger_zero,
      </if>
      <if test="usedRange != null">
        used_range,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="galleryBig != null">
        gallery_big,
      </if>
      <if test="ifTicket != null">
        if_ticket,
      </if>
      <if test="ifListGoods != null">
        if_list_goods,
      </if>
      <if test="dajiapaiCategoryId != null">
        dajiapai_category_id,
      </if>
      <if test="dajiapaiCategoryCode != null">
        dajiapai_category_code,
      </if>
      <if test="dajiapaiCategoryName != null">
        dajiapai_category_name,
      </if>
      <if test="privateCategoryId != null">
        private_category_id,
      </if>
      <if test="privateCategoryCode != null">
        private_category_code,
      </if>
      <if test="privateCategoryName != null">
        private_category_name,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="goodsPosKey != null">
        #{goodsPosKey,jdbcType=VARCHAR},
      </if>
      <if test="minStorenum != null">
        #{minStorenum,jdbcType=INTEGER},
      </if>
      <if test="yuyueNumber != null">
        #{yuyueNumber,jdbcType=INTEGER},
      </if>
      <if test="remainNumber != null">
        #{remainNumber,jdbcType=INTEGER},
      </if>
      <if test="specificationIds != null">
        #{specificationIds,jdbcType=VARCHAR},
      </if>
      <if test="storeIds != null">
        #{storeIds,jdbcType=VARCHAR},
      </if>
      <if test="returnType != null">
        #{returnType,jdbcType=VARCHAR},
      </if>
      <if test="returnRuleId != null">
        #{returnRuleId,jdbcType=INTEGER},
      </if>
      <if test="returnRuleNumber != null">
        #{returnRuleNumber,jdbcType=INTEGER},
      </if>
      <if test="returnRulePrice != null">
        #{returnRulePrice,jdbcType=DECIMAL},
      </if>
      <if test="returnAllowOrder != null">
        #{returnAllowOrder,jdbcType=BIT},
      </if>
      <if test="returnGrouponInfo != null">
        #{returnGrouponInfo,jdbcType=VARCHAR},
      </if>
      <if test="returnIfOnlyUserBonus != null">
        #{returnIfOnlyUserBonus,jdbcType=BIT},
      </if>
      <if test="returnAllowBuyGoods != null">
        #{returnAllowBuyGoods,jdbcType=BIT},
      </if>
      <if test="returnRuleSourcePrice != null">
        #{returnRuleSourcePrice,jdbcType=DECIMAL},
      </if>
      <if test="seckillEndDate != null">
        #{seckillEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="storeNames != null">
        #{storeNames,jdbcType=VARCHAR},
      </if>
      <if test="goodsSn != null">
        #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryCode != null">
        #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="gallery != null">
        #{gallery,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="brief != null">
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="isOnSale != null">
        #{isOnSale,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="shareUrl != null">
        #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=BIT},
      </if>
      <if test="ifXuni != null">
        #{ifXuni,jdbcType=BIT},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="counterPrice != null">
        #{counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="comName != null">
        #{comName,jdbcType=VARCHAR},
      </if>
      <if test="ifStoreBiggerZero != null">
        #{ifStoreBiggerZero,jdbcType=BIT},
      </if>
      <if test="usedRange != null">
        #{usedRange,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="galleryBig != null">
        #{galleryBig,jdbcType=VARCHAR},
      </if>
      <if test="ifTicket != null">
        #{ifTicket,jdbcType=BIT},
      </if>
      <if test="ifListGoods != null">
        #{ifListGoods,jdbcType=BIT},
      </if>
      <if test="dajiapaiCategoryId != null">
        #{dajiapaiCategoryId,jdbcType=INTEGER},
      </if>
      <if test="dajiapaiCategoryCode != null">
        #{dajiapaiCategoryCode,jdbcType=VARCHAR},
      </if>
      <if test="dajiapaiCategoryName != null">
        #{dajiapaiCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="privateCategoryId != null">
        #{privateCategoryId,jdbcType=INTEGER},
      </if>
      <if test="privateCategoryCode != null">
        #{privateCategoryCode,jdbcType=VARCHAR},
      </if>
      <if test="privateCategoryName != null">
        #{privateCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProductExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update view_litemall_goods_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.goodsPosKey != null">
        goods_pos_key = #{record.goodsPosKey,jdbcType=VARCHAR},
      </if>
      <if test="record.minStorenum != null">
        min_storenum = #{record.minStorenum,jdbcType=INTEGER},
      </if>
      <if test="record.yuyueNumber != null">
        yuyue_number = #{record.yuyueNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remainNumber != null">
        remain_number = #{record.remainNumber,jdbcType=INTEGER},
      </if>
      <if test="record.specificationIds != null">
        specification_ids = #{record.specificationIds,jdbcType=VARCHAR},
      </if>
      <if test="record.storeIds != null">
        store_ids = #{record.storeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.returnType != null">
        return_type = #{record.returnType,jdbcType=VARCHAR},
      </if>
      <if test="record.returnRuleId != null">
        return_rule_id = #{record.returnRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.returnRuleNumber != null">
        return_rule_number = #{record.returnRuleNumber,jdbcType=INTEGER},
      </if>
      <if test="record.returnRulePrice != null">
        return_rule_price = #{record.returnRulePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.returnAllowOrder != null">
        return_allow_order = #{record.returnAllowOrder,jdbcType=BIT},
      </if>
      <if test="record.returnGrouponInfo != null">
        return_groupon_info = #{record.returnGrouponInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.returnIfOnlyUserBonus != null">
        return_if_only_user_bonus = #{record.returnIfOnlyUserBonus,jdbcType=BIT},
      </if>
      <if test="record.returnAllowBuyGoods != null">
        return_allow_buy_goods = #{record.returnAllowBuyGoods,jdbcType=BIT},
      </if>
      <if test="record.returnRuleSourcePrice != null">
        return_rule_source_price = #{record.returnRuleSourcePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.seckillEndDate != null">
        seckill_end_date = #{record.seckillEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeNames != null">
        store_names = #{record.storeNames,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSn != null">
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryCode != null">
        category_code = #{record.categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryName != null">
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.brandName != null">
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.gallery != null">
        gallery = #{record.gallery,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null">
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnSale != null">
        is_on_sale = #{record.isOnSale,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.shareUrl != null">
        share_url = #{record.shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.isHot != null">
        is_hot = #{record.isHot,jdbcType=BIT},
      </if>
      <if test="record.ifXuni != null">
        if_xuni = #{record.ifXuni,jdbcType=BIT},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.counterPrice != null">
        counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.retailPrice != null">
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.comId != null">
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.comName != null">
        com_name = #{record.comName,jdbcType=VARCHAR},
      </if>
      <if test="record.ifStoreBiggerZero != null">
        if_store_bigger_zero = #{record.ifStoreBiggerZero,jdbcType=BIT},
      </if>
      <if test="record.usedRange != null">
        used_range = #{record.usedRange,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.galleryBig != null">
        gallery_big = #{record.galleryBig,jdbcType=VARCHAR},
      </if>
      <if test="record.ifTicket != null">
        if_ticket = #{record.ifTicket,jdbcType=BIT},
      </if>
      <if test="record.ifListGoods != null">
        if_list_goods = #{record.ifListGoods,jdbcType=BIT},
      </if>
      <if test="record.dajiapaiCategoryId != null">
        dajiapai_category_id = #{record.dajiapaiCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.dajiapaiCategoryCode != null">
        dajiapai_category_code = #{record.dajiapaiCategoryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dajiapaiCategoryName != null">
        dajiapai_category_name = #{record.dajiapaiCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.privateCategoryId != null">
        private_category_id = #{record.privateCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.privateCategoryCode != null">
        private_category_code = #{record.privateCategoryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.privateCategoryName != null">
        private_category_name = #{record.privateCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update view_litemall_goods_product
    set id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      specifications = #{record.specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      price = #{record.price,jdbcType=DECIMAL},
      `number` = #{record.number,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      goods_pos_key = #{record.goodsPosKey,jdbcType=VARCHAR},
      min_storenum = #{record.minStorenum,jdbcType=INTEGER},
      yuyue_number = #{record.yuyueNumber,jdbcType=INTEGER},
      remain_number = #{record.remainNumber,jdbcType=INTEGER},
      specification_ids = #{record.specificationIds,jdbcType=VARCHAR},
      store_ids = #{record.storeIds,jdbcType=VARCHAR},
      return_type = #{record.returnType,jdbcType=VARCHAR},
      return_rule_id = #{record.returnRuleId,jdbcType=INTEGER},
      return_rule_number = #{record.returnRuleNumber,jdbcType=INTEGER},
      return_rule_price = #{record.returnRulePrice,jdbcType=DECIMAL},
      return_allow_order = #{record.returnAllowOrder,jdbcType=BIT},
      return_groupon_info = #{record.returnGrouponInfo,jdbcType=VARCHAR},
      return_if_only_user_bonus = #{record.returnIfOnlyUserBonus,jdbcType=BIT},
      return_allow_buy_goods = #{record.returnAllowBuyGoods,jdbcType=BIT},
      return_rule_source_price = #{record.returnRuleSourcePrice,jdbcType=DECIMAL},
      seckill_end_date = #{record.seckillEndDate,jdbcType=TIMESTAMP},
      store_names = #{record.storeNames,jdbcType=VARCHAR},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_code = #{record.categoryCode,jdbcType=VARCHAR},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      gallery = #{record.gallery,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      share_url = #{record.shareUrl,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      if_xuni = #{record.ifXuni,jdbcType=BIT},
      unit = #{record.unit,jdbcType=VARCHAR},
      counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      com_id = #{record.comId,jdbcType=INTEGER},
      com_name = #{record.comName,jdbcType=VARCHAR},
      if_store_bigger_zero = #{record.ifStoreBiggerZero,jdbcType=BIT},
      used_range = #{record.usedRange,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      gallery_big = #{record.galleryBig,jdbcType=VARCHAR},
      if_ticket = #{record.ifTicket,jdbcType=BIT},
      if_list_goods = #{record.ifListGoods,jdbcType=BIT},
      dajiapai_category_id = #{record.dajiapaiCategoryId,jdbcType=INTEGER},
      dajiapai_category_code = #{record.dajiapaiCategoryCode,jdbcType=VARCHAR},
      dajiapai_category_name = #{record.dajiapaiCategoryName,jdbcType=VARCHAR},
      private_category_id = #{record.privateCategoryId,jdbcType=INTEGER},
      private_category_code = #{record.privateCategoryCode,jdbcType=VARCHAR},
      private_category_name = #{record.privateCategoryName,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update view_litemall_goods_product
    set id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      specifications = #{record.specifications,jdbcType=VARCHAR,typeHandler=org.jinyuanjava.litemall.db.mybatis.JsonStringArrayTypeHandler},
      price = #{record.price,jdbcType=DECIMAL},
      `number` = #{record.number,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      goods_pos_key = #{record.goodsPosKey,jdbcType=VARCHAR},
      min_storenum = #{record.minStorenum,jdbcType=INTEGER},
      yuyue_number = #{record.yuyueNumber,jdbcType=INTEGER},
      remain_number = #{record.remainNumber,jdbcType=INTEGER},
      specification_ids = #{record.specificationIds,jdbcType=VARCHAR},
      store_ids = #{record.storeIds,jdbcType=VARCHAR},
      return_type = #{record.returnType,jdbcType=VARCHAR},
      return_rule_id = #{record.returnRuleId,jdbcType=INTEGER},
      return_rule_number = #{record.returnRuleNumber,jdbcType=INTEGER},
      return_rule_price = #{record.returnRulePrice,jdbcType=DECIMAL},
      return_allow_order = #{record.returnAllowOrder,jdbcType=BIT},
      return_groupon_info = #{record.returnGrouponInfo,jdbcType=VARCHAR},
      return_if_only_user_bonus = #{record.returnIfOnlyUserBonus,jdbcType=BIT},
      return_allow_buy_goods = #{record.returnAllowBuyGoods,jdbcType=BIT},
      return_rule_source_price = #{record.returnRuleSourcePrice,jdbcType=DECIMAL},
      seckill_end_date = #{record.seckillEndDate,jdbcType=TIMESTAMP},
      store_names = #{record.storeNames,jdbcType=VARCHAR},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      category_code = #{record.categoryCode,jdbcType=VARCHAR},
      category_name = #{record.categoryName,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      gallery = #{record.gallery,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      share_url = #{record.shareUrl,jdbcType=VARCHAR},
      is_new = #{record.isNew,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      if_xuni = #{record.ifXuni,jdbcType=BIT},
      unit = #{record.unit,jdbcType=VARCHAR},
      counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      com_id = #{record.comId,jdbcType=INTEGER},
      com_name = #{record.comName,jdbcType=VARCHAR},
      if_store_bigger_zero = #{record.ifStoreBiggerZero,jdbcType=BIT},
      used_range = #{record.usedRange,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      gallery_big = #{record.galleryBig,jdbcType=VARCHAR},
      if_ticket = #{record.ifTicket,jdbcType=BIT},
      if_list_goods = #{record.ifListGoods,jdbcType=BIT},
      dajiapai_category_id = #{record.dajiapaiCategoryId,jdbcType=INTEGER},
      dajiapai_category_code = #{record.dajiapaiCategoryCode,jdbcType=VARCHAR},
      dajiapai_category_name = #{record.dajiapaiCategoryName,jdbcType=VARCHAR},
      private_category_id = #{record.privateCategoryId,jdbcType=INTEGER},
      private_category_code = #{record.privateCategoryCode,jdbcType=VARCHAR},
      private_category_name = #{record.privateCategoryName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="org.jinyuanjava.litemall.db.domain.ViewLitemallGoodsProductExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, goods_id, specifications, price, `number`, url, add_time, update_time, deleted, 
          goods_pos_key, min_storenum, yuyue_number, remain_number, specification_ids, store_ids, 
          return_type, return_rule_id, return_rule_number, return_rule_price, return_allow_order, 
          return_groupon_info, return_if_only_user_bonus, return_allow_buy_goods, return_rule_source_price, 
          seckill_end_date, store_names, goods_sn, `name`, category_id, category_code, category_name, 
          brand_id, brand_name, gallery, keywords, brief, is_on_sale, sort_order, pic_url, 
          share_url, is_new, is_hot, if_xuni, unit, counter_price, retail_price, com_id, 
          com_name, if_store_bigger_zero, used_range, author_id, gallery_big, if_ticket, 
          if_list_goods, dajiapai_category_id, dajiapai_category_code, dajiapai_category_name, 
          private_category_id, private_category_code, private_category_name, detail
      </otherwise>
    </choose>
    from view_litemall_goods_product
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update view_litemall_goods_product set deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>